version: '3.9'
services:
  post_service:
    container_name: post_service
    environment:
      - SERVER_PORT=${POST_SVC_PORT}
      - DB_USER=${POST_SVC_DB_USER}
      - DB_PASSWORD=${POST_SVC_DB_PASSWORD}
      - DB_NAME=${POST_SVC_DB_NAME}
      - DB_HOST=${POST_SVC_DB_HOST}
      - DB_PORT=${POST_SVC_DB_PORT}
      # - TEST_POSTGRES_USER=${TEST_DB_USER}
      # - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      # - TEST_POSTGRES_DB=${TEST_DB_NAME}
      # - TEST_DATABASE_HOST=${TEST_DB_HOST}
      # - TEST_DATABASE_PORT=${TEST_DB_PORT}
    tty: true
    build: ./post-service
    ports:
      - "8081:8081"
    restart: on-failure
    volumes:
      - ./post-service:/app
    depends_on:
      - post_service_db
    networks:
      - social_network

  post_service_db:
    image: postgres:latest
    container_name: post_service_db
    environment:
      - POSTGRES_USER=${POST_SVC_DB_USER}
      - POSTGRES_PASSWORD=${POST_SVC_DB_PASSWORD}
      - POSTGRES_DB=${POST_SVC_DB_NAME}
      - DATABASE_HOST=${POST_SVC_DB_HOST}
    ports:
      - '1234:5432'
    volumes:
      - ./post_service/post_svc_data:/var/lib/postgresql/data
    networks:
      - social_network

  # post_service_test_db:
  #   image: postgres:latest
  #   container_name: post_service_test_db
  #   environment:
  #     - POSTGRES_USER=${TEST_DB_USER}
  #     - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
  #     - POSTGRES_DB=${TEST_DB_NAME}
  #     - DATABASE_HOST=${TEST_DB_HOST}
  #   ports:
  #     - '4568:5432'
  #   volumes:
  #     - ./post-service/post_svc_data_test:/var/lib/postgresql/data
  #   networks:
  #     - social_network

volumes:
  post_svc_data:
  # post_svc_data_test:

# Networks to be created to facilitate communication between containers
networks:
  social_network:
    driver: bridge